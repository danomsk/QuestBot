import asyncio

from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove, ContentType

from loader import config, bot
from tgbot.keyboards.inline.FourTask.WhatDoYouSee import see
from tgbot.keyboards.inline.FourTask.hints import hint1, hint2, hint3, hint4
from tgbot.misc.states import WhatDoYouSee, CountPhotos

count_photo = 64
HINT = 0


# async def four_task(call: CallbackQuery):
#     call.message.answer("–ù—É —á—Ç–æ–∂, –Ω–∞—á–Ω–µ–º –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ")

async def four_task(message: Message):
    await message.answer("–ù—É —á—Ç–æ–∂. –ü—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—à –∫–≤–µ—Å—Ç)")
    await asyncio.sleep(2)

    await message.answer("–ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è...")
    await asyncio.sleep(2)
    await message.answer("–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–º–µ—á–∞–µ—à—å?", reply_markup=see)


async def similar(message: Message):
    await message.answer("–ò —á—Ç–æ –∂–µ —Ç—ã –≤–∏–¥–∏—à—å?", reply_markup=ReplyKeyboardRemove())
    await WhatDoYouSee.Similar.set()


async def banan(message: Message):
    await message.answer("–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Ç—ã –æ–∫—Ä—É–∂–µ–Ω–∞ —Å–∞–º—ã–º–∏ —Ü–µ–Ω–Ω—ã–º–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏ –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏."
                         "\n–≠—Ç–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –Ω–µ –∑–æ–ª–æ—Ç–æ –∏–ª–∏ —Å–µ—Ä–µ–±—Ä–æ, –Ω–æ –æ–Ω–∏ ‚Äì –Ω–∞—à–∏ —Å–∞–º—ã–µ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞."
                         "\n–≠—Ç–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏, –Ω–∞–∑—ã–≤–∞–µ–º—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏, —Ö—Ä–∞–Ω—è—Ç –≤ —Å–µ–±–µ –º–≥–Ω–æ–≤–µ–Ω–∏—è –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏. –í –∫–∞–∂–¥–æ–º –∏–∑ –Ω–∏—Ö ‚Äî –º–æ—Ä–µ —ç–º–æ—Ü–∏–π, –ª—É—á–∏ —Å—á–∞—Å—Ç—å—è –∏ —Ç–µ–ø–ª–æ –Ω–∞—à–∏—Ö –æ–±—ä—è—Ç–∏–π."
                         "\n–ù–∏ –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –∫–æ–≥–¥–∞ —è –Ω–µ –Ω–∞—Ö–æ–∂—É —Å–µ–±—è, –≤–≥–ª—è–¥—ã–≤–∞—è—Å—å –≤ —Ç–µ —Ç–∏—Ö–∏–µ –º–æ–º–µ–Ω—Ç—ã –Ω–∞—à–µ–≥–æ —Å—á–∞—Å—Ç—å—è."
                         "\n–û–Ω–∏ ‚Äì –Ω–∞—à–∞ —Ç–∏—Ö–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–πüñºÔ∏è‚ú®", reply_markup=ReplyKeyboardRemove())

    await asyncio.sleep(8)

    await message.answer(
        "–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≥–¥–µ –º—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã, –Ω–∞—Ö–æ–¥—è—Ç—Å—è —É –Ω–∞—Å –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ."
        "\n–¢–µ–±–µ —Å—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è –∏ –Ω–∞–π—Ç–∏ –í–°–ï —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ."
        "\n\n–£–¥–∞—á–∏ —Å–æ–ª–Ω—Ü–µ!)üòò")

    await CountPhotos.Photos.set()


async def send_creator(message: Message, state: FSMContext):
    answer = message.text
    await message.answer_sticker("CAACAgIAAxkBAAIIuGX7ZnsejUkF-uypfawBfAABV-sm3gACfhQAAl6R-Uth58UDbIVBgzQE")
    await asyncio.sleep(3)
    await message.answer("–ü—Ä–∏–¥–µ—Ç—Å—è –≤—Å–µ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –º–æ–µ–º—É —Å–æ–∑–¥–∞—Ç–µ–ª—é...")

    await bot.send_message(chat_id=config.tg_bot.admin_ids[0],
                           text=f"–ù–∞ –≤–æ–ø—Ä–æ—Å \"—á—Ç–æ –í–∏–∫–∞ –≤–∏–¥–∏—Ç –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ –≤–æ–∫—Ä—É–≥ —Å–µ–±—è\", –æ–Ω–∞ –æ—Ç–≤–µ—Ç–∏–ª–∞: {answer}")
    await state.finish()

    await asyncio.sleep(3)

    await message.answer("–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Ç—ã –æ–∫—Ä—É–∂–µ–Ω–∞ —Å–∞–º—ã–º–∏ —Ü–µ–Ω–Ω—ã–º–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏ –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏."
                         "\n–≠—Ç–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –Ω–µ –∑–æ–ª–æ—Ç–æ –∏–ª–∏ —Å–µ—Ä–µ–±—Ä–æ, –Ω–æ –æ–Ω–∏ ‚Äì –Ω–∞—à–∏ —Å–∞–º—ã–µ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞."
                         "\n–≠—Ç–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏, –Ω–∞–∑—ã–≤–∞–µ–º—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏, —Ö—Ä–∞–Ω—è—Ç –≤ —Å–µ–±–µ –º–≥–Ω–æ–≤–µ–Ω–∏—è –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏. –í –∫–∞–∂–¥–æ–º –∏–∑ –Ω–∏—Ö ‚Äî –º–æ—Ä–µ —ç–º–æ—Ü–∏–π, –ª—É—á–∏ —Å—á–∞—Å—Ç—å—è –∏ —Ç–µ–ø–ª–æ –Ω–∞—à–∏—Ö –æ–±—ä—è—Ç–∏–π."
                         "\n–ù–∏ –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –∫–æ–≥–¥–∞ —è –Ω–µ –Ω–∞—Ö–æ–∂—É —Å–µ–±—è, –≤–≥–ª—è–¥—ã–≤–∞—è—Å—å –≤ —Ç–µ —Ç–∏—Ö–∏–µ –º–æ–º–µ–Ω—Ç—ã –Ω–∞—à–µ–≥–æ —Å—á–∞—Å—Ç—å—è."
                         "\n–û–Ω–∏ ‚Äì –Ω–∞—à–∞ —Ç–∏—Ö–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–πüñºÔ∏è‚ú®")

    await asyncio.sleep(8)

    await message.answer("–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≥–¥–µ –º—ã –≤–º–µ—Å—Ç–µ, –Ω–∞—Ö–æ–¥—è—Ç—Å—è —É –Ω–∞—Å –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ."
                         "\n–¢–µ–±–µ —Å—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è –∏ –Ω–∞–π—Ç–∏ –í–°–ï —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ."
                         "\n\n–£–¥–∞—á–∏ —Å–æ–ª–Ω—Ü–µ!)üòò")
    await CountPhotos.Photos.set()


async def send_count_photos(message: Message, state: FSMContext):
    global HINT
    global count_photo

    if int(message.text) == count_photo:
        await message.answer("–£–≥–∞–¥–∞–ª–∞!")
        await state.finish()
        await bot.send_message(chat_id=config.tg_bot.admin_ids[0],
                               text=f"–û–Ω–∞ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ —á–µ—Ç–≤–µ—Ä—Ç–æ–µ –∑–∞–¥–∞–Ω–∏–µ")
    elif HINT == 0:
        await message.answer("–ù—É —è –æ–∂–∏–¥–∞–ª, —á—Ç–æ —Ç—ã —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –Ω–µ —É–≥–∞–¥–∞–µ—à—å", reply_markup=hint1)
        HINT += 1
    elif HINT == 1:
        await message.answer("–ò —Å–æ –≤—Ç–æ—Ä–æ–≥–æ —Ä–∞–∑–∞ –Ω–µ —É–≥–¥–∞–ª–∞???", reply_markup=hint2)
        HINT += 1
    elif HINT == 2:
        await message.answer("–ò —Å —Ç—Ä–µ—Ç—å–µ–≥–æ —Ä–∞–∑–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å!!??!!?!!???", reply_markup=hint3)
        HINT += 1
    else:
        await message.answer("–ù—É –≤–æ—Ç —Ç–µ–±–µ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ —á—Ç–æ–± —É–∂ –Ω–∞ –≤–µ—Ä–Ω—è–∫–∞!", reply_markup=hint4)


async def hint_1(call: CallbackQuery):
    await call.message.answer("–£ –Ω–∞—Å –µ—Å—Ç—å –æ—á–µ–Ω—å –∫–ª–∞—Å—Å–Ω–∞—è –∫–Ω–∏–≥–∞ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π)")


async def hint_2(call: CallbackQuery):
    await call.message.answer("–ù–∞–¥–µ—é—Å—å, —Ç—ã –ø—Ä–æ –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–µ —Ç–æ–∂–µ –ø–æ–º–Ω–∏—à—å")


async def hint_3(call: CallbackQuery):
    await call.message.answer("–£ –º–µ–Ω—è –≤ —è—â–∏–∫–µ –∫—Å—Ç–∞—Ç–∏ —Ç–æ–∂–µ –µ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")

async def hint_4(call: CallbackQuery):
    await call.message.answer("–ù–µ —Å—Ç–æ–∏—Ç –∑–∞–±—ã–≤–∞—Ç—å –ø—Ä–æ –Ω–∞—à—É –°–ê–ú–£–Æ –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")

def register_four_task(dp: Dispatcher):
    dp.register_message_handler(four_task, commands=["four"])

    dp.register_message_handler(similar, text="–î–∞, —è –∫–∞–∫ —Ä–∞–∑ —Å–µ–π—á–∞—Å –≤–∏–∂—É –∫–æ–µ-—á—Ç–æ –Ω–µ–æ–±—ã—á–Ω–æ–µü§î")
    dp.register_message_handler(banan, text="–ê —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å? –ù—É... üçå")

    dp.register_message_handler(send_count_photos, state=CountPhotos.Photos)
    dp.register_message_handler(send_creator, state=WhatDoYouSee.Similar)

    dp.register_callback_query_handler(hint_1, text="four_hint1", state=CountPhotos.Photos)
    dp.register_callback_query_handler(hint_2, text="four_hint2", state=CountPhotos.Photos)
    dp.register_callback_query_handler(hint_3, text="four_hint3", state=CountPhotos.Photos)
    dp.register_callback_query_handler(hint_4, text="four_hint4", state=CountPhotos.Photos)

    # dp.register_callback_query_handler(four_task, text="Find three gift")
