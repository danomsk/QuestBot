import asyncio

from PIL import Image, ImageChops
from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, InputFile, CallbackQuery, MediaGroup, ContentType

from loader import config, bot
from tgbot.keyboards.inline.go_three_task import go_next_three
from tgbot.misc.states import SecondTask


# async def second_task(message: Message):
#     time_sleep = 2
#     await message.answer("–ü–æ–∫–∞ —Ç—ã –∫—É—à–∞–µ—à—å –∫–∏–Ω–¥–µ—Ä, —è —É–∂–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –≤—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ)))\n\n"
#                          "–ò—Ç–∞–∫, –≤–µ—Ä–Ω–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É –Ω–∞—à–µ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞. –Ø –ø–æ–º–Ω—é, —á—Ç–æ –º—ã –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ —Å—Ç–∞–ª–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –¥—Ä—É–≥-–¥—Ä—É–≥—É –º–µ–º–Ω—ã–π —Ñ–æ—Ç–∫–∏)"
#                          "\n–ò –≤–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö...")
#
#     await asyncio.sleep(time_sleep)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/1.jpg"),
#                                caption="–≠—Ç–æ —è –ø–æ–ª—É—á–∏–ª –∫–æ–≥–¥–∞ –º—ã –≤–ø–µ—Ä–≤—ã–µ –Ω–∞—á–∞–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∑–∞–ø—Ä–µ—Ç–Ω—ã–µ —Ç–µ–º—ã"
#                                        "\n<tg-spoiler><b>–Ø –ü–†–û SEX</b></tg-spoiler>")
#     await asyncio.sleep(time_sleep-2)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/2.jpg"),
#                                caption="–ê —ç—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç—ã –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞, –∫–æ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏–ª–∞ —á—Ç–æ —Ö–æ—á–µ—à—å —Ñ—É—Ç–±–æ–ª–∫—É —Å —Ç–∞–∫–∏–º –ø—Ä–∏–Ω—Ç–æ–º)")
#
#     await asyncio.sleep(time_sleep-2)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/5.jpg"),
#                                caption="–¢—É—Ç —Ç—ã –æ—á–µ–Ω—å —Å–º–µ—à–Ω—è–≤–∞—è))")
#
#     await asyncio.sleep(time_sleep-2)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/3.jpg"),
#                                caption="–ê —Ç—É—Ç —è –æ—á–µ–Ω—å —Å–º–µ—à–Ω–æ–π)")
#
#     await asyncio.sleep(time_sleep-2)
#     album = MediaGroup()
#     album.attach_photo(InputFile(path_or_bytesio="tgbot/photo/4(2).jpg"), caption="–ê –∑–¥–µ—Å—å —è —Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è))ü•∞")
#     album.attach_photo(InputFile(path_or_bytesio="tgbot/photo/4(1).jpg"))
#     await message.answer_media_group(media=album)
#
#     await asyncio.sleep(time_sleep-2)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/7.jpg"),
#                                caption="–≠—Ç–æ —è –æ—Å—Ç–∞–≤–ª—é –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
#
#     await asyncio.sleep(time_sleep-2)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/8.jpg"),
#                                caption="–¢—É—Ç —Ç—ã –æ—á–µ–Ω—å –º–∏–ª–æ —Å–ø–∏—à—åüòç")
#
#     await asyncio.sleep(time_sleep-2)
#     await message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/11.jpg"),
#                                caption="–ê –∑–¥–µ—Å—å –Ω–µ –æ—á–µ–Ω—å –º–∏–ª–æ —Å–ø–ª—é —èü§°")
#
#     await asyncio.sleep(time_sleep-2)
#     await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –Ω–µ –º–æ–≥—É –∑–∞–ø–∏—Ö–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–≤–µ—Å—Ç –í–°–ï –Ω–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–Ω–∞—á–µ –∫–≤–µ—Å—Ç –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –Ω–æ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞—è –Ω–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
#                          " –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —è —Å–ª–æ–≤–∏–ª –æ–≥—Ä–æ–º–Ω—É—é –¥–æ–∑—É –∫–∞–π—Ñ–∞ –∏ –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã —Ç–æ–∂–µ."
#                          "\n–ö—Å—Ç–∞—Ç–∏.."
#                          "\n–†–∞–∑ —É–∂ –º—ã –∑–∞–≥–æ–≤–æ—Ä–∏–ª–∏ –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö, —Ç–æ –≤–æ—Ç —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ:"
#                          "\n\n<b>–¢–µ–±–µ –Ω–∞–¥–æ –Ω–∞–π—Ç–∏ —Å–∞–º—É—é –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –º–Ω–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∞ –≤–æ –≤—Å–µ–π –∫—Ä–∞—Å–µ, –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ —Å—é–¥–∞.</b>"
#                          "\n\n–£–¥–∞—á–∏!")
#
#     await SecondTask.T2.set()


async def second_task(call: CallbackQuery):
    time_sleep = 5
    await call.message.answer("–ü–æ–∫–∞ —Ç—ã –∫—É—à–∞–µ—à—å –∫–∏–Ω–¥–µ—Ä, —è —É–∂–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –≤—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ)))\n\n"
                         "–ò—Ç–∞–∫, –≤–µ—Ä–Ω–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É –Ω–∞—à–µ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞. –Ø –ø–æ–º–Ω—é, —á—Ç–æ –º—ã –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ —Å—Ç–∞–ª–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –¥—Ä—É–≥-–¥—Ä—É–≥—É –º–µ–º–Ω—ã–π —Ñ–æ—Ç–∫–∏)"
                         "\n–ò –≤–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö...")

    await asyncio.sleep(time_sleep)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/1.jpg"),
                               caption="–≠—Ç–æ —è –ø–æ–ª—É—á–∏–ª –∫–æ–≥–¥–∞ –º—ã –≤–ø–µ—Ä–≤—ã–µ –Ω–∞—á–∞–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∑–∞–ø—Ä–µ—Ç–Ω—ã–µ —Ç–µ–º—ã"
                                       "\n<tg-spoiler><b>–Ø –ü–†–û SEX</b></tg-spoiler>")
    await asyncio.sleep(time_sleep-2)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/2.jpg"),
                               caption="–ê —ç—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç—ã –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞, –∫–æ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏–ª–∞ —á—Ç–æ —Ö–æ—á–µ—à—å —Ñ—É—Ç–±–æ–ª–∫—É —Å —Ç–∞–∫–∏–º –ø—Ä–∏–Ω—Ç–æ–º)")

    await asyncio.sleep(time_sleep-2)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/5.jpg"),
                               caption="–¢—É—Ç —Ç—ã –æ—á–µ–Ω—å —Å–º–µ—à–Ω—è–≤–∞—è))")

    await asyncio.sleep(time_sleep-2)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/3.jpg"),
                               caption="–ê —Ç—É—Ç —è –æ—á–µ–Ω—å —Å–º–µ—à–Ω–æ–π)")

    await asyncio.sleep(time_sleep-2)
    album = MediaGroup()
    album.attach_photo(InputFile(path_or_bytesio="tgbot/photo/4(2).jpg"), caption="–ê –∑–¥–µ—Å—å —è —Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è))ü•∞")
    album.attach_photo(InputFile(path_or_bytesio="tgbot/photo/4(1).jpg"))
    await call.message.answer_media_group(media=album)

    await asyncio.sleep(time_sleep-2)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/7.jpg"),
                               caption="–≠—Ç–æ —è –æ—Å—Ç–∞–≤–ª—é –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")

    await asyncio.sleep(time_sleep-2)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/8.jpg"),
                               caption="–¢—É—Ç —Ç—ã –æ—á–µ–Ω—å –º–∏–ª–æ —Å–ø–∏—à—åüòç")

    await asyncio.sleep(time_sleep-2)
    await call.message.answer_photo(photo=InputFile(path_or_bytesio="tgbot/photo/11.jpg"),
                               caption="–ê –∑–¥–µ—Å—å –Ω–µ –æ—á–µ–Ω—å –º–∏–ª–æ —Å–ø–ª—é —èü§°")

    await asyncio.sleep(time_sleep-2)
    await call.message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –Ω–µ –º–æ–≥—É –∑–∞–ø–∏—Ö–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–≤–µ—Å—Ç –í–°–ï –Ω–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–Ω–∞—á–µ –∫–≤–µ—Å—Ç –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –Ω–æ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞—è –Ω–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
                         " –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —è —Å–ª–æ–≤–∏–ª –æ–≥—Ä–æ–º–Ω—É—é –¥–æ–∑—É –∫–∞–π—Ñ–∞ –∏ –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã —Ç–æ–∂–µ."
                         "\n–ö—Å—Ç–∞—Ç–∏.."
                         "\n–†–∞–∑ —É–∂ –º—ã –∑–∞–≥–æ–≤–æ—Ä–∏–ª–∏ –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö, —Ç–æ –≤–æ—Ç —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ:"
                         "\n\n<b>–¢–µ–±–µ –Ω–∞–¥–æ –Ω–∞–π—Ç–∏ —Å–∞–º—É—é –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –º–Ω–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∞ –≤–æ –≤—Å–µ–π –∫—Ä–∞—Å–µ, –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ —Å—é–¥–∞.</b>"
                         "\n\n–£–¥–∞—á–∏!")

    await SecondTask.T2.set()

async def answer_photo(message: Message, state: FSMContext):
    img1 = "tgbot/photo/12.png"
    await message.photo[-1].download(destination_file="tgbot/photo/test.png")
    img2 = "tgbot/photo/test.png"
    if(await difference_images(img1, img2)):
        await message.answer_sticker("CAACAgIAAxkBAAIDM2X525GnmhFeCGd2OFInCYRgN8fWAALJRgACdllhSLXuF_MYz_oWNAQ")
        await asyncio.sleep(1)
        await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –ù–æ –¥—É–º–∞—é —ç—Ç–æ –±—ã–ª–æ –ø—Ä–æ—Å—Ç–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –î–∞–ª—å—à–µ –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–µ–µ)\n"
                             "–¢–≤–æ–π –ø—Ä–∏–∑ –∂–¥–µ—Ç —Ç–µ–±—è –≤ —è—â–∏–∫–µ –∫—Ä–æ–≤–∞—Ç–∏ üéâ", reply_markup=go_next_three)
        await state.finish()
        await bot.send_message(chat_id=config.tg_bot.admin_ids[0], text="–í—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
    else:
        await message.answer("–≠—Ç–æ –Ω–µ —Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è. –ü–æ–∏—â–∏ –µ—â–µ\n"
                             "<tg-spoiler>–ù–∞ –º–æ–π –≤–∑–≥–ª—è–¥ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ –∑–∞–¥–∞–Ω–∏–µ, —Ç–∞–∫ —á—Ç–æ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –Ω–µ –±—É–¥–µ—Ç</tg-spoiler>")


async def difference_images(img1, img2):
    image1 = Image.open(img1)
    image2 = Image.open(img2)

    result = ImageChops.difference(image1, image2)
    if result.getbbox() == None:
        print(img1, img2, 'matches')
        return True
    else:
        result.save("result.jpg")
        return False

async def echo_answer_text(message:Message):
    await message.answer("–ù–∞–≤–µ—Ä–Ω–æ –ª–æ–≥–∏—á–Ω–æ, —á—Ç–æ –±–æ—Ç—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ –Ω–µ —Ç–µ–∫—Å—Ç")
    await message.answer_sticker("CAACAgIAAxkBAAIDRGX53UCb0d4HQJV1cy2xim5TE-3NAAIwQAACRUNhSEmBR7w4Xi8wNAQ")

async def echo_answer_document(message:Message):
    await message.answer_sticker("CAACAgIAAxkBAAIDRGX53UCb0d4HQJV1cy2xim5TE-3NAAIwQAACRUNhSEmBR7w4Xi8wNAQ")
    await message.answer("–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")


def register_second_task(dp: Dispatcher):
    dp.register_callback_query_handler(second_task, text="Find first gift")
    #dp.register_message_handler(second_task, commands=["second"])
    dp.register_message_handler(answer_photo, state=SecondTask.T2, content_types=ContentType.PHOTO)
    dp.register_message_handler(echo_answer_text, state=SecondTask.T2, content_types=ContentType.TEXT)
    dp.register_message_handler(echo_answer_document, state=SecondTask.T2, content_types=ContentType.DOCUMENT)
