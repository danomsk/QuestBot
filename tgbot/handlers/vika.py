import asyncio

from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery

from loader import bot, config
from tgbot.keyboards.inline import adventure

from tgbot.keyboards.inline.FirstTaskHint.incorrect_answer1 import incorrect1
from tgbot.keyboards.inline.FirstTaskHint.incorrect_answer2 import incorrect2
from tgbot.keyboards.inline.FirstTaskHint.incorrect_answer3 import incorrect3
from tgbot.keyboards.inline.FirstTaskHint.right_answer import answer_keyboard
from tgbot.misc.states import FirstTask

incorrect_answer = 0


async def vika_start(message: Message):
    await message.answer("""–î–æ—Ä–æ–≥–∞—è –í–∏–∫–∞, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!üåü\n
–°–µ–≥–æ–¥–Ω—è –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –Ω–∞—à–∏–º —Å–∞–º—ã–º –≤–∞–∂–Ω—ã–º –º–µ—Å—Ç–∞–º, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –∏ –ª—é–±–æ–≤—å—é –∏ –±–µ—Å–ø–µ—á–Ω–æ—Å—Ç—å—é.üíñ\n
–ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å —Å—Ç–∞–Ω–µ—Ç –¥–ª—è –Ω–∞—Å –æ—Å–æ–±–µ–Ω–Ω—ã–º, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º —Ä–æ–º–∞–Ω—Ç–∏–∫–æ–π –∏ –ø—Ä–∏—è—Ç–Ω—ã–º–∏ —Å—é—Ä–ø—Ä–∏–∑–∞–º–∏.\n
–ì–æ—Ç–æ–≤–∞ –ª–∏ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —ç—Ç–æ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —Å–æ –º–Ω–æ–π? üòä""",
                         reply_markup=adventure)
    await bot.send_message(chat_id=config.tg_bot.admin_ids[0], text="–û–Ω–∞ –Ω–∞–∂–∞–ª–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É start!\n–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å")


async def answer_start_adventure(call: CallbackQuery):
    await call.message.answer_sticker("CAACAgIAAxkBAAO1ZfmNC6FE7TDweOlpirEXje7DzO0AAiQ_AAJVA2hIAVvZ-JnLXns0BA", )
    await asyncio.sleep(1)
    hmtl_text = "\n".join(
        ["–û—Ç–ª–∏—á–Ω–æ! üòä –¢–µ–ø–µ—Ä—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ, –¥–∞–≤–∞–π –≤—Å–ø–æ–º–Ω–∏–º –¥–µ–Ω—å –Ω–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞",
         "–ù–∞–ø–∏—à–∏ –º–Ω–µ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞, –∫–æ–≥–¥–∞ –º—ã —Ç–æ–ª—å–∫–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å.",
         "–ü—É—Å—Ç—å —ç—Ç–∏ —Å–ª–æ–≤–∞ –Ω–∞–ø–æ–º–Ω—è—Ç –Ω–∞–º –æ –Ω–∞—à–µ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–µ –∏ –Ω–∞—á–Ω—É—Ç –Ω–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –ø—Ä–æ—à–ª–æ–µ, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –±–µ–∑–∑–∞–±–æ—Ç–Ω–æ—Å—Ç—å—é –∏ –ª—é–±–æ–≤—å—é.üíï",
         "<tg-spoiler>(–î–∞, –Ω–∞–¥–æ –≤–≤–µ—Å—Ç–∏ –≤ –±–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ <b>–ü–û–õ–ù–û–°–¢–¨–Æ</b>. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ—á–∫–∏ –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è. –†–µ–≥–∏—Å—Ç—Ä —Å–ª–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π)</tg-spoiler>"
         ])

    await call.message.answer(hmtl_text)
    await FirstTask.T1.set()


def register_vika(dp: Dispatcher):
    dp.register_message_handler(vika_start, commands=["start"], state="*", is_vika=True)
    dp.register_callback_query_handler(answer_start_adventure, text="Ok")
