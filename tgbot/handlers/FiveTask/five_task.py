import asyncio

from aiogram import Dispatcher
from aiogram.types import Message, CallbackQuery, InputFile

from loader import bot
from tgbot.keyboards.inline.FiveTask.go_on_task import she_came
from tgbot.keyboards.inline.FiveTask.member_photo import yes_or_no


async def five_task(call: CallbackQuery):
    chat_id = call.message.chat.id
    await call.message.answer("–ù—É —á—Ç–æ–∂, –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.")
    await asyncio.sleep(2)
    await call.message.answer("–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞...")
    await asyncio.sleep(5)
    await call.message.answer("–ú–µ–º!")
    await asyncio.sleep(1)
    ms = await call.message.answer_photo(InputFile("tgbot/photo/10.jpg"), "–ë—É!")
    await asyncio.sleep(2)
    await bot.delete_message(chat_id, ms.message_id)
    await asyncio.sleep(1)
    await call.message.answer("–ï—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª–∞, —Ç–æ —Å–æ—Ä–∏ü§∑‚Äç‚ôÇÔ∏è")
    await asyncio.sleep(2)
    await call.message.answer("–í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º–æ–∂–µ—à—å –µ—â–µ –æ–¥–∏–Ω –º–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å)")
    await asyncio.sleep(2)
    await call.message.answer_photo(InputFile("tgbot/photo/17.jpg"), "–í–æ—Ç—å)")
    await asyncio.sleep(2)
    await call.message.answer("–ù–∞–¥–µ—é—Å—å —Ç–µ–±–µ –±—ã–ª–æ —Å–º–µ—à–Ω–æ")
    await asyncio.sleep(2)
    await call.message.answer("–í–µ–¥—å –±—ã–ª–æ –∂–µ?")
    await asyncio.sleep(1)
    await call.message.answer_sticker("CAACAgIAAxkBAAIKUWX8Vs6AbeFJw1WTJ3qksHo4na14AALIGwACSukJSIJufSd74wMPNAQ")
    await asyncio.sleep(2)
    await call.message.answer("–ù—É –ª–∞–¥–Ω–æ, –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –Ω–∞—à–µ–º—É –∑–∞–¥–∞–Ω–∏—é...")
    await asyncio.sleep(2)
    await call.message.answer_photo(InputFile("tgbot/photo/18.jpg"), "–ü–æ–º–Ω–∏—à—å –ª–∏ —Ç—ã —ç—Ç–æ –º–µ—Å—Ç–æ?", reply_markup=yes_or_no)

# async def five_task(message: Message):
#     chat_id = message.chat.id
#     await message.answer("–ù—É —á—Ç–æ–∂, –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.")
#     await asyncio.sleep(2)
#     await message.answer("–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞...")
#     await asyncio.sleep(5)
#     await message.answer("–ú–µ–º!")
#     await asyncio.sleep(1)
#     ms = await message.answer_photo(InputFile("tgbot/photo/10.jpg"), "–ë—É!")
#     await asyncio.sleep(2)
#     await bot.delete_message(chat_id, ms.message_id)
#     await asyncio.sleep(1)
#     await message.answer("–ï—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª–∞, —Ç–æ —Å–æ—Ä–∏ü§∑‚Äç‚ôÇÔ∏è")
#     await asyncio.sleep(2)
#     await message.answer("–í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º–æ–∂–µ—à—å –µ—â–µ –æ–¥–∏–Ω –º–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å)")
#     await asyncio.sleep(2)
#     await message.answer_photo(InputFile("tgbot/photo/17.jpg"), "–í–æ—Ç—å)")
#     await asyncio.sleep(2)
#     await message.answer("–ù–∞–¥–µ—é—Å—å —Ç–µ–±–µ –±—ã–ª–æ —Å–º–µ—à–Ω–æ")
#     await asyncio.sleep(2)
#     await message.answer("–í–µ–¥—å –±—ã–ª–æ –∂–µ?")
#     await asyncio.sleep(1)
#     await message.answer_sticker("CAACAgIAAxkBAAIKUWX8Vs6AbeFJw1WTJ3qksHo4na14AALIGwACSukJSIJufSd74wMPNAQ")
#     await asyncio.sleep(2)
#     await message.answer("–ù—É –ª–∞–¥–Ω–æ, –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –Ω–∞—à–µ–º—É –∑–∞–¥–∞–Ω–∏—é...")
#     await asyncio.sleep(2)
#     await message.answer_photo(InputFile("tgbot/photo/18.jpg"), "–ü–æ–º–Ω–∏—à—å –ª–∏ —Ç—ã —ç—Ç–æ –º–µ—Å—Ç–æ?", reply_markup=yes_or_no)

async def no(call: CallbackQuery):
    await call.message.edit_reply_markup(None)
    await call.message.answer_sticker("CAACAgIAAxkBAAIKZ2X8XEoSHmtwiDZvnYH2NTr6lyvtAALUFQACq2B5Sdmgt8PAXtiZNAQ")
    await asyncio.sleep(2)
    await call.message.answer("–ü–ª–æ—Ö–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–µ–π—á–∞—Å —Ç–µ–±–µ –Ω–∞–¥–æ –∏–¥—Ç–∏ —Ç—É–¥–∞, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–µ—Ä–µ–¥–Ω–æ–π –∫–≤–µ—Å—Ç)")
    await asyncio.sleep(2)
    await call.message.answer("–ö–∞–∫ –±—É–¥–µ—à—å –Ω–∞ –º–µ—Å—Ç–µ, —Ç—ã–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É", reply_markup=she_came)

async def yes(call:CallbackQuery):
    await call.message.edit_reply_markup(None)
    await call.message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–æ–≥–¥–∞ —Å–æ–±–∏—Ä–∞–π—Å—è, –æ–¥–µ–≤–∞–π—Å—è –∏ –≤—ã–¥–≤–∏–≥–∞–π—Å—è –Ω–∞ —ç—Ç–æ –º–µ—Å—Ç–æ)")
    await asyncio.sleep(2)
    await call.message.answer("–ö–∞–∫ –±—É–¥–µ—à—å –Ω–∞ –º–µ—Å—Ç–µ, —Ç—ã–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É", reply_markup=she_came)


async def she_came_to_street(call: CallbackQuery):
    await call.message.answer("–ù–∞–¥–µ—é—Å—å —Ç—ã –¥–æ–±—Ä–∞–ª–∞—Å—å –±–µ–∑ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π!")
    await asyncio.sleep(2)
    await call.message.answer("–Ø —Å—á–∏—Ç–∞—é, —á—Ç–æ —ç—Ç–æ –Ω–∞—à–µ —Å–∞–º–æ–µ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –º–µ—Å—Ç–æ <tg-spoiler>(–Ω–µ —Å—á–∏—Ç–∞—è –º–∞—à–∏–Ω—ã)</tg-spoiler>"
                         "\n–ó–¥–µ—Å—å —è –≤–ø–µ—Ä–≤—ã–µ —É–≤–∏–¥–µ–ª —Ç–µ–±—è —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –û–±—ã—á–Ω–æ —Ç—ã —Å–¥–µ—Ä–∂–∞–Ω–Ω–∞—è –∏ —Å–ø–æ–∫–æ–π–Ω–∞—è, –Ω–æ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å "
                              "—è —É–≤–∏–¥–µ–ª –≤ —Ç–µ–±–µ —Ö—Ä—É–ø–∫—É—é –∏ –º–∞–ª–µ–Ω—å–∫—É—é –¥–µ–≤–æ—á–∫—É."
                         "\n–í–æ–æ–¥—É—à–µ–≤–ª–µ–Ω–Ω—ã–π –ª—é–±–æ–≤—å—é –∏ –¥–æ—Ñ–∞–º–∏–Ω–æ–º —è –ø–æ–º–Ω—é –∫–∞–∫ —Å–º–æ—Ç—Ä–µ–ª –Ω–∞ —Ç–µ–±—è –∫–∞–∫ –Ω–∞ –±–æ–≥–∏–Ω—é –∫–æ—Ç–æ—Ä–æ–π —è –Ω–µ –¥–æ—Å—Ç–æ–∏–Ω.")
    await asyncio.sleep(5)
    await call.message.answer_photo(InputFile("tgbot/photo/20.jpg"))
    await asyncio.sleep(2)
    await call.message.answer("–Ø –ø–æ–º–Ω—é –∫–∞–∫ –Ω–µ —Ö–æ—Ç–µ–ª –æ—Ç–ø—É—Å–∫–∞—Ç—å —Ç–µ–±—è –∏ –∂–µ–ª–∞–ª –¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ —Å–≤–æ–∏—Ö —Ä—É–∫–∞—Ö –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ!")
    await asyncio.sleep(3)
    await call.message.answer_photo(InputFile("tgbot/photo/21.jpg"))
    await asyncio.sleep(2)
    await call.message.answer("–Ø –ø–æ–º–Ω—é –∫–∞–∫ –Ω–µ —Ö–æ—Ç–µ–ª —É—Ö–æ–¥–∏—Ç—å –æ—Ç —Ç–µ–±—è –Ω–∞ —Ä–∞–±–æ—Ç—É, —É—á–µ–±—É, –¥–æ–º–æ–π, –∫ –¥—Ä—É–∑—å—è–º,!")
    await asyncio.sleep(3)
    await call.message.answer_photo(InputFile("tgbot/photo/22.png"))
    await asyncio.sleep(2)
    await call.message.answer("–ü–æ–º–Ω—é –∫–∞–∫ –º—ã –Ω–∞—á–∞–ª–∏ –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞—Ç—å—Å—è –º–∏–ª—ã–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –∏ –≤ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –≤–∏–¥–æ—Å–∞–º–∏")
    await asyncio.sleep(3)
    await call.message.answer_photo(InputFile("tgbot/photo/23.jpg"))
    await asyncio.sleep(2)
    await call.message.answer("–Ø –ø–æ–º–Ω—é –≤—Å–µ –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Ü–µ–Ω—é —Ç–µ –º–æ–º–µ–Ω—Ç—ã, –ø–æ—Ç–æ–º—É –∫–∞–∫ –ø–æ–º–Ω—é, —á—Ç–æ –º—ã –æ–±–∞ –±—ã–ª–∏ –æ–∫—Ä—ã–ª–µ–Ω–Ω—ã –ª—é–±–æ–≤—å—é –∏ "
                              "–Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ö–æ—Ç–µ–ª–∏ —Ä–∞—Å—Å—Ç–∞–≤–∞—Ç—å—Å—è.")
    await asyncio.sleep(2)
    await call.message.answer("–•–æ—á—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —è –æ—á–µ–Ω—å –ª—é–±–ª—é —Ç–µ–±—è –∏ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å "
                              "–≤ –Ω–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, —è –±–µ–∑–º–µ—Ä–Ω–æ —Å—á–∞—Å—Ç–ª–∏–≤ –±—ã—Ç—å —Å —Ç–æ–±–æ–π, –æ–±–Ω–∏–º–∞—Ç—å —Ç–µ–±—è, —Å–º–µ—è—Ç—å—Å—è —Å —Ç–æ–±–æ–π, –ø—Ä–æ–∂–∏–≤–∞—Ç—å –∏ —Ö—É–¥—à–∏–µ, –∏ –ª—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã –º–æ–µ–π –∂–∏–∑–Ω–∏. "
                              "–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ –≤—Å–µ!")
    await asyncio.sleep(2)
    await call.message.answer("–Ø –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —Ç–µ–±—è –ª—é–±–ª—é‚ù§Ô∏è")
    await asyncio.sleep(60)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer(".")
    await asyncio.sleep(2)
    await call.message.answer("–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ª–µ–¥—É–µ—Ç...üòâ")



def register_five_task(dp: Dispatcher):
    #dp.register_message_handler(five_task, commands=["five"])

    dp.register_callback_query_handler(yes, text="yesPhoto")
    dp.register_callback_query_handler(no, text="noPhoto")

    dp.register_callback_query_handler(she_came_to_street, text="she_came")

    dp.register_callback_query_handler(five_task, text="Find four gift")